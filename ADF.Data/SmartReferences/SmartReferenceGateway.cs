//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated using Tobago MDA.
//     Model           : SmartReferences
//     Template        : Table Gateway.tpl
//     Runtime Version : $Version$
//     Generation date : 26-9-2007 13:37:21
//
//     Changes to this file may cause incorrect behavior and may be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using Adf.Base.Data;
using Adf.Base.Query;
using Adf.Core.Data;
using Adf.Core.Identity;
using Adf.Data.Search;

namespace Adf.Data.SmartReferences
{
    /// <summary>
    /// Represents the gateway for database transection of table SmartReference.
    /// Provides methods to save, select, remove, update and search data from SmartReference table.
    /// </summary>
    public partial class SmartReferenceGateway : TableGateway
    {
        private static readonly DataSources DataSource = SmartReferenceDescriber.Table.DataSource;

        #region CodeGuard(IInternalStateProvider Methods)

        /// <summary>
        /// Create a new data row of <see cref="IInternalState"/> to insert new data into database.
        /// </summary>
        /// <param name="type">Set the specified Type column of SmartReference table.</param>
        /// <returns>The query result into <see cref="IInternalState"/> object.</returns>
        /// <exception cref="System.InvalidOperationException">The current state of the connection is closed.</exception>
        public static IInternalState New(string type)
        {
            var state = new AdfQuery()
                .Select()
                .From(SmartReferenceDescriber.Table)
                .New(DataSource);

            state.ID = IdManager.New<Guid>();

            state.Set(SmartReferenceDescriber.Type, type);

            return state;
        }

        /// <summary>
        /// Get all data from SmartReference table by the matching column of specified Type and return the array of <see cref="IInternalState"/> as result.
        /// </summary>
        /// <param name="type">Match for the Type within SmartReference table.</param>
        /// <returns>The array of <see cref="IInternalState"/> as result.</returns>
        /// <exception cref="System.InvalidOperationException">The current state of the connection is closed.</exception>
        public static IEnumerable<IInternalState> GetByType(string type)
        {
            return new AdfQuery()
                .Select()
                .From(SmartReferenceDescriber.Table)
                .Where(SmartReferenceDescriber.Type).IsEqual(type)
                .OrderBy(SmartReferenceDescriber.Description).Ascending()
                .RunSplit(DataSource);
        }

        /// <summary>
        /// Get data from SmartReference table by the matching columns of specified Id and Type.
        /// </summary>
        /// <param name="id">Match for the Id within SmartReference table.</param>
        /// <param name="type">Match for the Type within SmartReference table.</param>
        /// <returns>The query result into <see cref="IInternalState"/> object.</returns>
        /// <exception cref="System.InvalidOperationException">The current state of the connection is closed.</exception>
        public static IInternalState Get(ID id, string type)
        {
            return new AdfQuery()
                .Select()
                .From(SmartReferenceDescriber.Table)
                .Where(SmartReferenceDescriber.Id).IsEqual(id)
                .And(SmartReferenceDescriber.Type).IsEqual(type)
                .Run(DataSource);
        }

        /// <summary>
        /// Get data from SmartReference table by the matching columns of specified Name and Type.
        /// </summary>
        /// <param name="name">Match for the Name within SmartReference table.</param>
        /// <param name="type">Match for the Type within SmartReference table.</param>
        /// <returns>The query result into <see cref="IInternalState"/> object.</returns>
        /// <exception cref="System.InvalidOperationException">The current state of the connection is closed.</exception>
        public static IInternalState GetByName(string name, string type)
        {
            return new AdfQuery()
                .Select()
                .From(SmartReferenceDescriber.Table)
                .Where(SmartReferenceDescriber.Name).IsEqual(name)
                .And(SmartReferenceDescriber.Type).IsEqual(type)
                .Run(DataSource);
        }

        /// <summary>
        /// Get the record count from SmartReference table.
        /// </summary>
        /// <returns>The record count.</returns>
        /// <exception cref="System.InvalidOperationException">The current state of the connection is closed.</exception>
        public static int Count()
        {
            return new AdfQuery()
                .Count()
                .From(SmartReferenceDescriber.Table)
                .RunScalar<int>(DataSource);
        }

        /// <summary>
        /// Delete the record from SmartReference table.
        /// </summary>
        /// <param name="state">The data of <see cref="IInternalState"/> that needs to be removed.</param>
        /// <returns>True if record deleted successfully; otherwise, false.</returns>
        /// <exception cref="System.InvalidOperationException">The current state of the connection is closed.</exception>
        public static bool Remove(IInternalState state)
        {
            if (state == null) throw new ArgumentNullException("state");

            return new AdfQuery()
                       .From(SmartReferenceDescriber.Table)
                       .Where(SmartReferenceDescriber.Id).IsEqual(state.ID)
                       .Remove(DataSource) == 1;
        }

        /// <summary>
        /// Save the data into SmartReference table.
        /// </summary>
        /// <param name="state">The data of <see cref="IInternalState"/> that needs to be saved.</param>
        /// <returns>True if record saved successfully; otherwise, false.</returns>
        /// <exception cref="System.InvalidOperationException">The current state of the connection is closed.</exception>
        public static bool Save(IInternalState state)
        {
            if (state == null) throw new ArgumentNullException("state");

            return new AdfQuery()
                .Select()
                .From(SmartReferenceDescriber.Table)
                .Save(DataSource, state);
        }

        /// <summary>
        /// Search the records from SmartReference table depending upon the list of parameters.
        /// </summary>
        /// <returns>The array of <see cref="IInternalState"/> as search result.</returns>
        /// <exception cref="System.InvalidOperationException">The current state of the connection is closed.</exception>
        public static IEnumerable<IInternalState> Search(IEnumerable<ISearchParameter> parameters)
        {
            if (parameters == null) throw new ArgumentNullException("parameters", @"SearchObject");

            return new AdfQuery()
                .Select()
                .From(SmartReferenceDescriber.Table)
                .BuildQuery(typeof (SmartReferenceDescriber), parameters)
                .RunSplit(DataSource);
        }

        #endregion CodeGuard(IInternalStateProvider Methods)
    }
}
